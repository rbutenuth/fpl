
Notepad++ Scripte:

Selection per http put versenden:

set CURL_EXE = C:\Program Files\Git\mingw64\bin\curl.exe
set TEMP_FILE = $(SYS.TEMP)\npp_sel.txt
SEL_SAVETO $(TEMP_FILE)
"$(CURL_EXE)" -s --user fred:feuerstein -X POST http://localhost:8080/java --data-binary @"$(TEMP_FILE)"


Gesamte Datei speichern und versenden:

set CURL_EXE = C:\Program Files\Git\mingw64\bin\curl.exe
NPP_SAVE
"$(CURL_EXE)" -s --user fred:feuerstein -X POST http://localhost:8080/java --data-binary @"$(FULL_CURRENT_PATH)"



(def-class my-class 
	(def-function new (a b)
		(new-instance "a" a "b" b)
	)

	(def-field key 42)
)

(def my-object (my-class new 6 7))

(stop-server)
((java-class "java.lang.System") exit 1)
((java-class "java.lang.System") nanoTime)

(def array-list (java-instance "java.util.ArrayList"))
(array-list add 5)
(array-list add 6)
(array-list get 1)


((java-class "java.lang.System") currentTimeMillis)

(put counter nil)
(def counter 10)
(println "los geht's")
(while (ge counter 0) 
	(println counter)
	(set counter (- counter 1))
)



(put future (create-future ((java-class java.lang.Thread) sleep 5000)))
(future)


(http-request "https://www.spiegel.de" "GET" nil nil nil nil nil)


(def-function auth (user password)
	(and (eq "fred" user) (eq "secret" password))
)

(auth "fred" "secretx")



(put fib nil)
(def-function fib (n)
	(if-else (le n 2)
		1
		(+ (fib (- n 1)) (fib (- n 2)))
	)
)

(fib 35) ; retunrs 9227465 in 11.8 s

(thread-pool-size 30)
(put par-fib nil)
(def-function par-fib (n)
	(if-else (le n 2)
		1
		(reduce 
			(lambda (acc value) (+ acc value)) 
			0 
			(parallel (par-fib (- n 1)) (par-fib (- n 2)))
		)
	)
)

(par-fib 35) ; 4.2 s


(put par-fib nil)
(def-function par-fib (n)
	(if-else (le n 2)
		1
		(if-else (le n 10)
			(fib n)
			(reduce 
				(lambda (acc value) (+ acc value)) 
				0 
				(parallel (par-fib (- n 1)) (par-fib (- n 2)))
			)
		)
	)
)

(par-fib 35) ; 2.5 s

(put fast-fib nil)
(def-function fast-fib (n)
	(if-else (le n 2)
		1
		(sequential 
			(def fib-2 1)
			(def fib-1 1)
			(def i 3)
			(def fib 0)
			(while (le i n)
				(set fib (+ fib-2 fib-1))
				(set fib-2 fib-1)
				(set fib-1 fib)
				(set i (+ i 1))
			)
			fib
		)
	)
)
(fast-fib 35) ; 4 ms (including http call)

